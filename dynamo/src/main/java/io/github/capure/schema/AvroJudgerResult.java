/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package io.github.capure.schema;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class AvroJudgerResult extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 6807987922651316898L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"AvroJudgerResult\",\"namespace\":\"io.github.capure.schema\",\"fields\":[{\"name\":\"cpuTime\",\"type\":\"int\"},{\"name\":\"realTime\",\"type\":\"int\"},{\"name\":\"memory\",\"type\":\"int\"},{\"name\":\"signal\",\"type\":\"int\"},{\"name\":\"exitCode\",\"type\":\"int\"},{\"name\":\"error\",\"type\":{\"type\":\"enum\",\"name\":\"AvroJudgerResultError\",\"symbols\":[\"ERROR_NONE\",\"ERROR_INVALID_CONFIG\",\"ERROR_FORK_FAILED\",\"ERROR_PTHREAD_FAILED\",\"ERROR_WAIT_FAILED\",\"ERROR_ROOT_REQUIRED\",\"ERROR_LOAD_SECCOMP_FAILED\",\"ERROR_SETRLIMIT_FAILED\",\"ERROR_DUP2_FAILED\",\"ERROR_SETUID_FAILED\",\"ERROR_EXECVE_FAILED\",\"ERROR_SPJ_ERROR\"]}},{\"name\":\"result\",\"type\":{\"type\":\"enum\",\"name\":\"AvroJudgerResultCode\",\"symbols\":[\"RESULT_SUCCESS\",\"RESULT_WRONG_ANSWER\",\"RESULT_CPU_TIME_LIMIT_EXCEEDED\",\"RESULT_REAL_TIME_LIMIT_EXCEEDED\",\"RESULT_MEMORY_LIMIT_EXCEEDED\",\"RESULT_RUNTIME_ERROR\",\"RESULT_SYSTEM_ERROR\"]}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<AvroJudgerResult> ENCODER =
      new BinaryMessageEncoder<AvroJudgerResult>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<AvroJudgerResult> DECODER =
      new BinaryMessageDecoder<AvroJudgerResult>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<AvroJudgerResult> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<AvroJudgerResult> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<AvroJudgerResult>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this AvroJudgerResult to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a AvroJudgerResult from a ByteBuffer. */
  public static AvroJudgerResult fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public int cpuTime;
  @Deprecated public int realTime;
  @Deprecated public int memory;
  @Deprecated public int signal;
  @Deprecated public int exitCode;
  @Deprecated public io.github.capure.schema.AvroJudgerResultError error;
  @Deprecated public io.github.capure.schema.AvroJudgerResultCode result;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public AvroJudgerResult() {}

  /**
   * All-args constructor.
   * @param cpuTime The new value for cpuTime
   * @param realTime The new value for realTime
   * @param memory The new value for memory
   * @param signal The new value for signal
   * @param exitCode The new value for exitCode
   * @param error The new value for error
   * @param result The new value for result
   */
  public AvroJudgerResult(java.lang.Integer cpuTime, java.lang.Integer realTime, java.lang.Integer memory, java.lang.Integer signal, java.lang.Integer exitCode, io.github.capure.schema.AvroJudgerResultError error, io.github.capure.schema.AvroJudgerResultCode result) {
    this.cpuTime = cpuTime;
    this.realTime = realTime;
    this.memory = memory;
    this.signal = signal;
    this.exitCode = exitCode;
    this.error = error;
    this.result = result;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return cpuTime;
    case 1: return realTime;
    case 2: return memory;
    case 3: return signal;
    case 4: return exitCode;
    case 5: return error;
    case 6: return result;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: cpuTime = (java.lang.Integer)value$; break;
    case 1: realTime = (java.lang.Integer)value$; break;
    case 2: memory = (java.lang.Integer)value$; break;
    case 3: signal = (java.lang.Integer)value$; break;
    case 4: exitCode = (java.lang.Integer)value$; break;
    case 5: error = (io.github.capure.schema.AvroJudgerResultError)value$; break;
    case 6: result = (io.github.capure.schema.AvroJudgerResultCode)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'cpuTime' field.
   * @return The value of the 'cpuTime' field.
   */
  public java.lang.Integer getCpuTime() {
    return cpuTime;
  }

  /**
   * Sets the value of the 'cpuTime' field.
   * @param value the value to set.
   */
  public void setCpuTime(java.lang.Integer value) {
    this.cpuTime = value;
  }

  /**
   * Gets the value of the 'realTime' field.
   * @return The value of the 'realTime' field.
   */
  public java.lang.Integer getRealTime() {
    return realTime;
  }

  /**
   * Sets the value of the 'realTime' field.
   * @param value the value to set.
   */
  public void setRealTime(java.lang.Integer value) {
    this.realTime = value;
  }

  /**
   * Gets the value of the 'memory' field.
   * @return The value of the 'memory' field.
   */
  public java.lang.Integer getMemory() {
    return memory;
  }

  /**
   * Sets the value of the 'memory' field.
   * @param value the value to set.
   */
  public void setMemory(java.lang.Integer value) {
    this.memory = value;
  }

  /**
   * Gets the value of the 'signal' field.
   * @return The value of the 'signal' field.
   */
  public java.lang.Integer getSignal() {
    return signal;
  }

  /**
   * Sets the value of the 'signal' field.
   * @param value the value to set.
   */
  public void setSignal(java.lang.Integer value) {
    this.signal = value;
  }

  /**
   * Gets the value of the 'exitCode' field.
   * @return The value of the 'exitCode' field.
   */
  public java.lang.Integer getExitCode() {
    return exitCode;
  }

  /**
   * Sets the value of the 'exitCode' field.
   * @param value the value to set.
   */
  public void setExitCode(java.lang.Integer value) {
    this.exitCode = value;
  }

  /**
   * Gets the value of the 'error' field.
   * @return The value of the 'error' field.
   */
  public io.github.capure.schema.AvroJudgerResultError getError() {
    return error;
  }

  /**
   * Sets the value of the 'error' field.
   * @param value the value to set.
   */
  public void setError(io.github.capure.schema.AvroJudgerResultError value) {
    this.error = value;
  }

  /**
   * Gets the value of the 'result' field.
   * @return The value of the 'result' field.
   */
  public io.github.capure.schema.AvroJudgerResultCode getResult() {
    return result;
  }

  /**
   * Sets the value of the 'result' field.
   * @param value the value to set.
   */
  public void setResult(io.github.capure.schema.AvroJudgerResultCode value) {
    this.result = value;
  }

  /**
   * Creates a new AvroJudgerResult RecordBuilder.
   * @return A new AvroJudgerResult RecordBuilder
   */
  public static io.github.capure.schema.AvroJudgerResult.Builder newBuilder() {
    return new io.github.capure.schema.AvroJudgerResult.Builder();
  }

  /**
   * Creates a new AvroJudgerResult RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new AvroJudgerResult RecordBuilder
   */
  public static io.github.capure.schema.AvroJudgerResult.Builder newBuilder(io.github.capure.schema.AvroJudgerResult.Builder other) {
    return new io.github.capure.schema.AvroJudgerResult.Builder(other);
  }

  /**
   * Creates a new AvroJudgerResult RecordBuilder by copying an existing AvroJudgerResult instance.
   * @param other The existing instance to copy.
   * @return A new AvroJudgerResult RecordBuilder
   */
  public static io.github.capure.schema.AvroJudgerResult.Builder newBuilder(io.github.capure.schema.AvroJudgerResult other) {
    return new io.github.capure.schema.AvroJudgerResult.Builder(other);
  }

  /**
   * RecordBuilder for AvroJudgerResult instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<AvroJudgerResult>
    implements org.apache.avro.data.RecordBuilder<AvroJudgerResult> {

    private int cpuTime;
    private int realTime;
    private int memory;
    private int signal;
    private int exitCode;
    private io.github.capure.schema.AvroJudgerResultError error;
    private io.github.capure.schema.AvroJudgerResultCode result;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(io.github.capure.schema.AvroJudgerResult.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.cpuTime)) {
        this.cpuTime = data().deepCopy(fields()[0].schema(), other.cpuTime);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.realTime)) {
        this.realTime = data().deepCopy(fields()[1].schema(), other.realTime);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.memory)) {
        this.memory = data().deepCopy(fields()[2].schema(), other.memory);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.signal)) {
        this.signal = data().deepCopy(fields()[3].schema(), other.signal);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.exitCode)) {
        this.exitCode = data().deepCopy(fields()[4].schema(), other.exitCode);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.error)) {
        this.error = data().deepCopy(fields()[5].schema(), other.error);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.result)) {
        this.result = data().deepCopy(fields()[6].schema(), other.result);
        fieldSetFlags()[6] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing AvroJudgerResult instance
     * @param other The existing instance to copy.
     */
    private Builder(io.github.capure.schema.AvroJudgerResult other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.cpuTime)) {
        this.cpuTime = data().deepCopy(fields()[0].schema(), other.cpuTime);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.realTime)) {
        this.realTime = data().deepCopy(fields()[1].schema(), other.realTime);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.memory)) {
        this.memory = data().deepCopy(fields()[2].schema(), other.memory);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.signal)) {
        this.signal = data().deepCopy(fields()[3].schema(), other.signal);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.exitCode)) {
        this.exitCode = data().deepCopy(fields()[4].schema(), other.exitCode);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.error)) {
        this.error = data().deepCopy(fields()[5].schema(), other.error);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.result)) {
        this.result = data().deepCopy(fields()[6].schema(), other.result);
        fieldSetFlags()[6] = true;
      }
    }

    /**
      * Gets the value of the 'cpuTime' field.
      * @return The value.
      */
    public java.lang.Integer getCpuTime() {
      return cpuTime;
    }

    /**
      * Sets the value of the 'cpuTime' field.
      * @param value The value of 'cpuTime'.
      * @return This builder.
      */
    public io.github.capure.schema.AvroJudgerResult.Builder setCpuTime(int value) {
      validate(fields()[0], value);
      this.cpuTime = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'cpuTime' field has been set.
      * @return True if the 'cpuTime' field has been set, false otherwise.
      */
    public boolean hasCpuTime() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'cpuTime' field.
      * @return This builder.
      */
    public io.github.capure.schema.AvroJudgerResult.Builder clearCpuTime() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'realTime' field.
      * @return The value.
      */
    public java.lang.Integer getRealTime() {
      return realTime;
    }

    /**
      * Sets the value of the 'realTime' field.
      * @param value The value of 'realTime'.
      * @return This builder.
      */
    public io.github.capure.schema.AvroJudgerResult.Builder setRealTime(int value) {
      validate(fields()[1], value);
      this.realTime = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'realTime' field has been set.
      * @return True if the 'realTime' field has been set, false otherwise.
      */
    public boolean hasRealTime() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'realTime' field.
      * @return This builder.
      */
    public io.github.capure.schema.AvroJudgerResult.Builder clearRealTime() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'memory' field.
      * @return The value.
      */
    public java.lang.Integer getMemory() {
      return memory;
    }

    /**
      * Sets the value of the 'memory' field.
      * @param value The value of 'memory'.
      * @return This builder.
      */
    public io.github.capure.schema.AvroJudgerResult.Builder setMemory(int value) {
      validate(fields()[2], value);
      this.memory = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'memory' field has been set.
      * @return True if the 'memory' field has been set, false otherwise.
      */
    public boolean hasMemory() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'memory' field.
      * @return This builder.
      */
    public io.github.capure.schema.AvroJudgerResult.Builder clearMemory() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'signal' field.
      * @return The value.
      */
    public java.lang.Integer getSignal() {
      return signal;
    }

    /**
      * Sets the value of the 'signal' field.
      * @param value The value of 'signal'.
      * @return This builder.
      */
    public io.github.capure.schema.AvroJudgerResult.Builder setSignal(int value) {
      validate(fields()[3], value);
      this.signal = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'signal' field has been set.
      * @return True if the 'signal' field has been set, false otherwise.
      */
    public boolean hasSignal() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'signal' field.
      * @return This builder.
      */
    public io.github.capure.schema.AvroJudgerResult.Builder clearSignal() {
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'exitCode' field.
      * @return The value.
      */
    public java.lang.Integer getExitCode() {
      return exitCode;
    }

    /**
      * Sets the value of the 'exitCode' field.
      * @param value The value of 'exitCode'.
      * @return This builder.
      */
    public io.github.capure.schema.AvroJudgerResult.Builder setExitCode(int value) {
      validate(fields()[4], value);
      this.exitCode = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'exitCode' field has been set.
      * @return True if the 'exitCode' field has been set, false otherwise.
      */
    public boolean hasExitCode() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'exitCode' field.
      * @return This builder.
      */
    public io.github.capure.schema.AvroJudgerResult.Builder clearExitCode() {
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'error' field.
      * @return The value.
      */
    public io.github.capure.schema.AvroJudgerResultError getError() {
      return error;
    }

    /**
      * Sets the value of the 'error' field.
      * @param value The value of 'error'.
      * @return This builder.
      */
    public io.github.capure.schema.AvroJudgerResult.Builder setError(io.github.capure.schema.AvroJudgerResultError value) {
      validate(fields()[5], value);
      this.error = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'error' field has been set.
      * @return True if the 'error' field has been set, false otherwise.
      */
    public boolean hasError() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'error' field.
      * @return This builder.
      */
    public io.github.capure.schema.AvroJudgerResult.Builder clearError() {
      error = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'result' field.
      * @return The value.
      */
    public io.github.capure.schema.AvroJudgerResultCode getResult() {
      return result;
    }

    /**
      * Sets the value of the 'result' field.
      * @param value The value of 'result'.
      * @return This builder.
      */
    public io.github.capure.schema.AvroJudgerResult.Builder setResult(io.github.capure.schema.AvroJudgerResultCode value) {
      validate(fields()[6], value);
      this.result = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'result' field has been set.
      * @return True if the 'result' field has been set, false otherwise.
      */
    public boolean hasResult() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'result' field.
      * @return This builder.
      */
    public io.github.capure.schema.AvroJudgerResult.Builder clearResult() {
      result = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public AvroJudgerResult build() {
      try {
        AvroJudgerResult record = new AvroJudgerResult();
        record.cpuTime = fieldSetFlags()[0] ? this.cpuTime : (java.lang.Integer) defaultValue(fields()[0]);
        record.realTime = fieldSetFlags()[1] ? this.realTime : (java.lang.Integer) defaultValue(fields()[1]);
        record.memory = fieldSetFlags()[2] ? this.memory : (java.lang.Integer) defaultValue(fields()[2]);
        record.signal = fieldSetFlags()[3] ? this.signal : (java.lang.Integer) defaultValue(fields()[3]);
        record.exitCode = fieldSetFlags()[4] ? this.exitCode : (java.lang.Integer) defaultValue(fields()[4]);
        record.error = fieldSetFlags()[5] ? this.error : (io.github.capure.schema.AvroJudgerResultError) defaultValue(fields()[5]);
        record.result = fieldSetFlags()[6] ? this.result : (io.github.capure.schema.AvroJudgerResultCode) defaultValue(fields()[6]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<AvroJudgerResult>
    WRITER$ = (org.apache.avro.io.DatumWriter<AvroJudgerResult>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<AvroJudgerResult>
    READER$ = (org.apache.avro.io.DatumReader<AvroJudgerResult>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
