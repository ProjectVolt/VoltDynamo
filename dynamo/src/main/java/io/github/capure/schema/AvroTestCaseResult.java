/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package io.github.capure.schema;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class AvroTestCaseResult extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 452341113579704382L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"AvroTestCaseResult\",\"namespace\":\"io.github.capure.schema\",\"fields\":[{\"name\":\"testCaseId\",\"type\":\"long\"},{\"name\":\"output\",\"type\":\"string\"},{\"name\":\"judgerResult\",\"type\":{\"type\":\"record\",\"name\":\"AvroJudgerResult\",\"fields\":[{\"name\":\"cpuTime\",\"type\":\"int\"},{\"name\":\"realTime\",\"type\":\"int\"},{\"name\":\"memory\",\"type\":\"int\"},{\"name\":\"signal\",\"type\":\"int\"},{\"name\":\"exitCode\",\"type\":\"int\"},{\"name\":\"error\",\"type\":{\"type\":\"enum\",\"name\":\"AvroJudgerResultError\",\"symbols\":[\"ERROR_NONE\",\"ERROR_INVALID_CONFIG\",\"ERROR_FORK_FAILED\",\"ERROR_PTHREAD_FAILED\",\"ERROR_WAIT_FAILED\",\"ERROR_ROOT_REQUIRED\",\"ERROR_LOAD_SECCOMP_FAILED\",\"ERROR_SETRLIMIT_FAILED\",\"ERROR_DUP2_FAILED\",\"ERROR_SETUID_FAILED\",\"ERROR_EXECVE_FAILED\",\"ERROR_SPJ_ERROR\"]}},{\"name\":\"result\",\"type\":{\"type\":\"enum\",\"name\":\"AvroJudgerResultCode\",\"symbols\":[\"RESULT_SUCCESS\",\"RESULT_WRONG_ANSWER\",\"RESULT_CPU_TIME_LIMIT_EXCEEDED\",\"RESULT_REAL_TIME_LIMIT_EXCEEDED\",\"RESULT_MEMORY_LIMIT_EXCEEDED\",\"RESULT_RUNTIME_ERROR\",\"RESULT_SYSTEM_ERROR\"]}}]}},{\"name\":\"score\",\"type\":\"int\"},{\"name\":\"errorMessage\",\"type\":\"string\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<AvroTestCaseResult> ENCODER =
      new BinaryMessageEncoder<AvroTestCaseResult>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<AvroTestCaseResult> DECODER =
      new BinaryMessageDecoder<AvroTestCaseResult>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<AvroTestCaseResult> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<AvroTestCaseResult> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<AvroTestCaseResult>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this AvroTestCaseResult to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a AvroTestCaseResult from a ByteBuffer. */
  public static AvroTestCaseResult fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public long testCaseId;
  @Deprecated public java.lang.CharSequence output;
  @Deprecated public io.github.capure.schema.AvroJudgerResult judgerResult;
  @Deprecated public int score;
  @Deprecated public java.lang.CharSequence errorMessage;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public AvroTestCaseResult() {}

  /**
   * All-args constructor.
   * @param testCaseId The new value for testCaseId
   * @param output The new value for output
   * @param judgerResult The new value for judgerResult
   * @param score The new value for score
   * @param errorMessage The new value for errorMessage
   */
  public AvroTestCaseResult(java.lang.Long testCaseId, java.lang.CharSequence output, io.github.capure.schema.AvroJudgerResult judgerResult, java.lang.Integer score, java.lang.CharSequence errorMessage) {
    this.testCaseId = testCaseId;
    this.output = output;
    this.judgerResult = judgerResult;
    this.score = score;
    this.errorMessage = errorMessage;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return testCaseId;
    case 1: return output;
    case 2: return judgerResult;
    case 3: return score;
    case 4: return errorMessage;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: testCaseId = (java.lang.Long)value$; break;
    case 1: output = (java.lang.CharSequence)value$; break;
    case 2: judgerResult = (io.github.capure.schema.AvroJudgerResult)value$; break;
    case 3: score = (java.lang.Integer)value$; break;
    case 4: errorMessage = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'testCaseId' field.
   * @return The value of the 'testCaseId' field.
   */
  public java.lang.Long getTestCaseId() {
    return testCaseId;
  }

  /**
   * Sets the value of the 'testCaseId' field.
   * @param value the value to set.
   */
  public void setTestCaseId(java.lang.Long value) {
    this.testCaseId = value;
  }

  /**
   * Gets the value of the 'output' field.
   * @return The value of the 'output' field.
   */
  public java.lang.CharSequence getOutput() {
    return output;
  }

  /**
   * Sets the value of the 'output' field.
   * @param value the value to set.
   */
  public void setOutput(java.lang.CharSequence value) {
    this.output = value;
  }

  /**
   * Gets the value of the 'judgerResult' field.
   * @return The value of the 'judgerResult' field.
   */
  public io.github.capure.schema.AvroJudgerResult getJudgerResult() {
    return judgerResult;
  }

  /**
   * Sets the value of the 'judgerResult' field.
   * @param value the value to set.
   */
  public void setJudgerResult(io.github.capure.schema.AvroJudgerResult value) {
    this.judgerResult = value;
  }

  /**
   * Gets the value of the 'score' field.
   * @return The value of the 'score' field.
   */
  public java.lang.Integer getScore() {
    return score;
  }

  /**
   * Sets the value of the 'score' field.
   * @param value the value to set.
   */
  public void setScore(java.lang.Integer value) {
    this.score = value;
  }

  /**
   * Gets the value of the 'errorMessage' field.
   * @return The value of the 'errorMessage' field.
   */
  public java.lang.CharSequence getErrorMessage() {
    return errorMessage;
  }

  /**
   * Sets the value of the 'errorMessage' field.
   * @param value the value to set.
   */
  public void setErrorMessage(java.lang.CharSequence value) {
    this.errorMessage = value;
  }

  /**
   * Creates a new AvroTestCaseResult RecordBuilder.
   * @return A new AvroTestCaseResult RecordBuilder
   */
  public static io.github.capure.schema.AvroTestCaseResult.Builder newBuilder() {
    return new io.github.capure.schema.AvroTestCaseResult.Builder();
  }

  /**
   * Creates a new AvroTestCaseResult RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new AvroTestCaseResult RecordBuilder
   */
  public static io.github.capure.schema.AvroTestCaseResult.Builder newBuilder(io.github.capure.schema.AvroTestCaseResult.Builder other) {
    return new io.github.capure.schema.AvroTestCaseResult.Builder(other);
  }

  /**
   * Creates a new AvroTestCaseResult RecordBuilder by copying an existing AvroTestCaseResult instance.
   * @param other The existing instance to copy.
   * @return A new AvroTestCaseResult RecordBuilder
   */
  public static io.github.capure.schema.AvroTestCaseResult.Builder newBuilder(io.github.capure.schema.AvroTestCaseResult other) {
    return new io.github.capure.schema.AvroTestCaseResult.Builder(other);
  }

  /**
   * RecordBuilder for AvroTestCaseResult instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<AvroTestCaseResult>
    implements org.apache.avro.data.RecordBuilder<AvroTestCaseResult> {

    private long testCaseId;
    private java.lang.CharSequence output;
    private io.github.capure.schema.AvroJudgerResult judgerResult;
    private io.github.capure.schema.AvroJudgerResult.Builder judgerResultBuilder;
    private int score;
    private java.lang.CharSequence errorMessage;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(io.github.capure.schema.AvroTestCaseResult.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.testCaseId)) {
        this.testCaseId = data().deepCopy(fields()[0].schema(), other.testCaseId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.output)) {
        this.output = data().deepCopy(fields()[1].schema(), other.output);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.judgerResult)) {
        this.judgerResult = data().deepCopy(fields()[2].schema(), other.judgerResult);
        fieldSetFlags()[2] = true;
      }
      if (other.hasJudgerResultBuilder()) {
        this.judgerResultBuilder = io.github.capure.schema.AvroJudgerResult.newBuilder(other.getJudgerResultBuilder());
      }
      if (isValidValue(fields()[3], other.score)) {
        this.score = data().deepCopy(fields()[3].schema(), other.score);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.errorMessage)) {
        this.errorMessage = data().deepCopy(fields()[4].schema(), other.errorMessage);
        fieldSetFlags()[4] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing AvroTestCaseResult instance
     * @param other The existing instance to copy.
     */
    private Builder(io.github.capure.schema.AvroTestCaseResult other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.testCaseId)) {
        this.testCaseId = data().deepCopy(fields()[0].schema(), other.testCaseId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.output)) {
        this.output = data().deepCopy(fields()[1].schema(), other.output);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.judgerResult)) {
        this.judgerResult = data().deepCopy(fields()[2].schema(), other.judgerResult);
        fieldSetFlags()[2] = true;
      }
      this.judgerResultBuilder = null;
      if (isValidValue(fields()[3], other.score)) {
        this.score = data().deepCopy(fields()[3].schema(), other.score);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.errorMessage)) {
        this.errorMessage = data().deepCopy(fields()[4].schema(), other.errorMessage);
        fieldSetFlags()[4] = true;
      }
    }

    /**
      * Gets the value of the 'testCaseId' field.
      * @return The value.
      */
    public java.lang.Long getTestCaseId() {
      return testCaseId;
    }

    /**
      * Sets the value of the 'testCaseId' field.
      * @param value The value of 'testCaseId'.
      * @return This builder.
      */
    public io.github.capure.schema.AvroTestCaseResult.Builder setTestCaseId(long value) {
      validate(fields()[0], value);
      this.testCaseId = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'testCaseId' field has been set.
      * @return True if the 'testCaseId' field has been set, false otherwise.
      */
    public boolean hasTestCaseId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'testCaseId' field.
      * @return This builder.
      */
    public io.github.capure.schema.AvroTestCaseResult.Builder clearTestCaseId() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'output' field.
      * @return The value.
      */
    public java.lang.CharSequence getOutput() {
      return output;
    }

    /**
      * Sets the value of the 'output' field.
      * @param value The value of 'output'.
      * @return This builder.
      */
    public io.github.capure.schema.AvroTestCaseResult.Builder setOutput(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.output = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'output' field has been set.
      * @return True if the 'output' field has been set, false otherwise.
      */
    public boolean hasOutput() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'output' field.
      * @return This builder.
      */
    public io.github.capure.schema.AvroTestCaseResult.Builder clearOutput() {
      output = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'judgerResult' field.
      * @return The value.
      */
    public io.github.capure.schema.AvroJudgerResult getJudgerResult() {
      return judgerResult;
    }

    /**
      * Sets the value of the 'judgerResult' field.
      * @param value The value of 'judgerResult'.
      * @return This builder.
      */
    public io.github.capure.schema.AvroTestCaseResult.Builder setJudgerResult(io.github.capure.schema.AvroJudgerResult value) {
      validate(fields()[2], value);
      this.judgerResultBuilder = null;
      this.judgerResult = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'judgerResult' field has been set.
      * @return True if the 'judgerResult' field has been set, false otherwise.
      */
    public boolean hasJudgerResult() {
      return fieldSetFlags()[2];
    }

    /**
     * Gets the Builder instance for the 'judgerResult' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public io.github.capure.schema.AvroJudgerResult.Builder getJudgerResultBuilder() {
      if (judgerResultBuilder == null) {
        if (hasJudgerResult()) {
          setJudgerResultBuilder(io.github.capure.schema.AvroJudgerResult.newBuilder(judgerResult));
        } else {
          setJudgerResultBuilder(io.github.capure.schema.AvroJudgerResult.newBuilder());
        }
      }
      return judgerResultBuilder;
    }

    /**
     * Sets the Builder instance for the 'judgerResult' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public io.github.capure.schema.AvroTestCaseResult.Builder setJudgerResultBuilder(io.github.capure.schema.AvroJudgerResult.Builder value) {
      clearJudgerResult();
      judgerResultBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'judgerResult' field has an active Builder instance
     * @return True if the 'judgerResult' field has an active Builder instance
     */
    public boolean hasJudgerResultBuilder() {
      return judgerResultBuilder != null;
    }

    /**
      * Clears the value of the 'judgerResult' field.
      * @return This builder.
      */
    public io.github.capure.schema.AvroTestCaseResult.Builder clearJudgerResult() {
      judgerResult = null;
      judgerResultBuilder = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'score' field.
      * @return The value.
      */
    public java.lang.Integer getScore() {
      return score;
    }

    /**
      * Sets the value of the 'score' field.
      * @param value The value of 'score'.
      * @return This builder.
      */
    public io.github.capure.schema.AvroTestCaseResult.Builder setScore(int value) {
      validate(fields()[3], value);
      this.score = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'score' field has been set.
      * @return True if the 'score' field has been set, false otherwise.
      */
    public boolean hasScore() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'score' field.
      * @return This builder.
      */
    public io.github.capure.schema.AvroTestCaseResult.Builder clearScore() {
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'errorMessage' field.
      * @return The value.
      */
    public java.lang.CharSequence getErrorMessage() {
      return errorMessage;
    }

    /**
      * Sets the value of the 'errorMessage' field.
      * @param value The value of 'errorMessage'.
      * @return This builder.
      */
    public io.github.capure.schema.AvroTestCaseResult.Builder setErrorMessage(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.errorMessage = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'errorMessage' field has been set.
      * @return True if the 'errorMessage' field has been set, false otherwise.
      */
    public boolean hasErrorMessage() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'errorMessage' field.
      * @return This builder.
      */
    public io.github.capure.schema.AvroTestCaseResult.Builder clearErrorMessage() {
      errorMessage = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public AvroTestCaseResult build() {
      try {
        AvroTestCaseResult record = new AvroTestCaseResult();
        record.testCaseId = fieldSetFlags()[0] ? this.testCaseId : (java.lang.Long) defaultValue(fields()[0]);
        record.output = fieldSetFlags()[1] ? this.output : (java.lang.CharSequence) defaultValue(fields()[1]);
        if (judgerResultBuilder != null) {
          record.judgerResult = this.judgerResultBuilder.build();
        } else {
          record.judgerResult = fieldSetFlags()[2] ? this.judgerResult : (io.github.capure.schema.AvroJudgerResult) defaultValue(fields()[2]);
        }
        record.score = fieldSetFlags()[3] ? this.score : (java.lang.Integer) defaultValue(fields()[3]);
        record.errorMessage = fieldSetFlags()[4] ? this.errorMessage : (java.lang.CharSequence) defaultValue(fields()[4]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<AvroTestCaseResult>
    WRITER$ = (org.apache.avro.io.DatumWriter<AvroTestCaseResult>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<AvroTestCaseResult>
    READER$ = (org.apache.avro.io.DatumReader<AvroTestCaseResult>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
